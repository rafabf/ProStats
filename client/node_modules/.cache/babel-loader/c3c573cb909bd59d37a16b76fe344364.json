{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelbollit/Desktop/proyecto 3/e-prostats/client/src/components/pages/match/Match.js\";\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport TeamServices from '../../../services/team.services';\nimport './match.css';\nimport UserCard from '../user/UserCard';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis } from \"recharts\";\nimport Select from '../../ui/Select';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Match extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.getAllTeam();\n\n    this.getAllTeam = () => {\n      this.services.getAllTeam().then(allteam => this.setState({\n        team: allteam\n      })).catch(err => console.log(err));\n    };\n\n    this.getMyTeam = () => {\n      this.services.getMyTeam().then(theTeam => this.setState({\n        team: theTeam\n      })).catch(err => console.log(err));\n    };\n\n    this.membersteam = (teamName, value) => {\n      console.log(value);\n      console.log(teamName); //value del input/nombre del equipo\n\n      const selector = value; //name del input/el imput que lo ha marcado\n\n      this.setState({\n        [selector]: teamName\n      }, () => {\n        // filtrar los equipos con los valores\n        if (this.state.select_1 != null && this.state.select_2 != null) {\n          //nos copiamos el team completo del state\n          const result = this.state.team.filter(team => {\n            return team.name === this.state.select_1 || team.name === this.state.select_2;\n          }); // return result\n          //filtramos los que coincidan con los select\n          //metemos en selectedTeam el array que retorna filter\n\n          this.setState({\n            selectedTeam: result\n          });\n        }\n      });\n    };\n\n    this.num = () => {\n      Math.floor(Math.random() * (11 - 5) + 5);\n    };\n\n    this.chart = () => {\n      const teamData = [Object.entries(team.members.data).map(e => ({\n        name: e[0],\n        value: e[1],\n        fullMark: 20\n      }))];\n      const teamDataReducido = teamData.reduce((acumulado, elemento) => {\n        acumulado.this.state.team.members.data.kills += elemento.team.members.data.kills;\n        acumulado.team.members.data.deaths += elemento.team.members.data.deaths;\n        acumulado.team.members.data.assists += elemento.team.members.data.assists;\n        return acumulado;\n      }, {\n        points: 0,\n        height: 0\n      });\n      teamDataReducido.team.members.data.kills = teamDataReducido.team.members.data.kills / team.members.length;\n      teamDataReducido.team.members.data.deaths = teamDataReducido.team.members.deaths / team.members.length;\n      teamDataReducido.team.members.data.assists = teamDataReducido.team.members.data.assists / team.members.length;\n    };\n\n    this.state = {\n      team: {},\n      select_1: null,\n      select_2: null,\n      selectedTeam: null\n    };\n    this.services = new TeamServices();\n  }\n\n  render() {\n    console.log();\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"h3-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Selecciona tu equipo\"), React.createElement(Select, {\n      name: \"select_1\",\n      teams: this.state.team,\n      setMembers: this.membersteam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Selecciona el equipo del contrincante\"), React.createElement(Select, {\n      name: \"select_2\",\n      teams: this.state.team,\n      setMembers: this.membersteam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.selectedTeam && this.state.selectedTeam.map(team => {\n      return React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, team.members.map(elm => React.createElement(UserCard, Object.assign({\n        key: elm._id\n      }, elm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))));\n    })), React.createElement(RadarChart, {\n      cx: 600,\n      cy: 500,\n      outerRadius: 300,\n      width: 1000,\n      height: 800,\n      data: teamDataReducido,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(PolarGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(PolarAngleAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Radar, {\n      name: \"Mike\",\n      dataKey: \"value\",\n      stroke: \"#7784d8\",\n      fill: \"#8884d8\",\n      fillOpacity: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button-style\",\n      onClick: this.num,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" Generar c\\xF3digo de partida\"))));\n  }\n\n}\n\nexport default Match; // const data = [\n//     { subject: 'Math', A: 120, B: 110, fullMark: 150 },\n//     { subject: 'Chinese', A: 98, B: 130, fullMark: 150 },\n//     { subject: 'English', A: 86, B: 130, fullMark: 150 },\n//     { subject: 'Geography', A: 99, B: 100, fullMark: 150 },\n//     { subject: 'Physics', A: 85, B: 90, fullMark: 150 },\n//     { subject: 'History', A: 65, B: 85, fullMark: 150 },\n// ];\n// const TwoLevelPieChart = React.createClass({\n//     render() {\n//         return (\n//             <RadarChart cx={300} cy={250} outerRadius={150} width={600} height={500} data={data}>\n//                 <PolarGrid />\n//                 <PolarAngleAxis dataKey=\"subject\" />\n//                 <PolarRadiusAxis angle={30} domain={[0, 150]} />\n//                 <Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n//                 <Radar name=\"Lily\" dataKey=\"B\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.6} />\n//                 <Legend />\n//             </RadarChart>\n//         );\n//     }\n// })","map":{"version":3,"sources":["/Users/rafaelbollit/Desktop/proyecto 3/e-prostats/client/src/components/pages/match/Match.js"],"names":["React","Component","Container","TeamServices","UserCard","Radar","RadarChart","PolarGrid","PolarAngleAxis","Select","Row","Col","Button","Match","constructor","props","componentDidMount","getAllTeam","services","then","allteam","setState","team","catch","err","console","log","getMyTeam","theTeam","membersteam","teamName","value","selector","state","select_1","select_2","result","filter","name","selectedTeam","num","Math","floor","random","chart","teamData","Object","entries","members","data","map","e","fullMark","teamDataReducido","reduce","acumulado","elemento","this","kills","deaths","assists","points","height","length","render","elm","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport TeamServices from '../../../services/team.services'\nimport './match.css'\nimport UserCard from '../user/UserCard'\n\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis } from \"recharts\";\nimport Select from '../../ui/Select'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\n\nclass Match extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = { team: {}, select_1: null, select_2: null, selectedTeam: null }\n        this.services = new TeamServices()\n    }\n\n    componentDidMount = () => this.getAllTeam()\n\n    getAllTeam = () => {\n        this.services.getAllTeam()\n            .then(allteam => this.setState({ team: allteam }))\n            .catch(err => console.log(err))\n    }\n\n    getMyTeam = () => {\n        this.services.getMyTeam()\n            .then(theTeam => this.setState({ team: theTeam }))\n            .catch(err => console.log(err))\n    }\n\n    membersteam = (teamName, value) => {\n        console.log(value)\n        console.log(teamName) //value del input/nombre del equipo\n        const selector = value//name del input/el imput que lo ha marcado\n        this.setState({ [selector]: teamName }, () => {\n\n            // filtrar los equipos con los valores\n            if (this.state.select_1 != null && this.state.select_2 != null) {\n                //nos copiamos el team completo del state\n                const result = this.state.team.filter(team => {\n                    return team.name === this.state.select_1 || team.name === this.state.select_2\n                })\n                // return result\n                //filtramos los que coincidan con los select\n                //metemos en selectedTeam el array que retorna filter\n                this.setState({ selectedTeam: result });\n            }\n        })\n    }\n\n    num = () => {\n        Math.floor((Math.random() * (11 - 5)) + 5);\n    }\n    chart = () => {\n        const teamData = [Object.entries(team.members.data).map(e => ({\n            name: e[0],\n            value: e[1],\n            fullMark: 20\n        }))];\n        const teamDataReducido = teamData.reduce((acumulado, elemento) => {\n            acumulado.this.state.team.members.data.kills += elemento.team.members.data.kills\n            acumulado.team.members.data.deaths += elemento.team.members.data.deaths\n            acumulado.team.members.data.assists += elemento.team.members.data.assists\n\n            return acumulado\n        },\n            { points: 0, height: 0 })\n        teamDataReducido.team.members.data.kills = teamDataReducido.team.members.data.kills / team.members.length\n        teamDataReducido.team.members.data.deaths = teamDataReducido.team.members.deaths / team.members.length\n        teamDataReducido.team.members.data.assists = teamDataReducido.team.members.data.assists / team.members.length\n\n    }\n\n\n    render() {\n        console.log()\n        return (\n            <Container>\n                <Row>\n                    <Col><h3 className=\"h3-style\">Selecciona tu equipo</h3>\n                        <Select name=\"select_1\" teams={this.state.team} setMembers={this.membersteam} />\n                    </Col>\n                    <Col><h3>Selecciona el equipo del contrincante</h3>\n                        <Select name=\"select_2\" teams={this.state.team} setMembers={this.membersteam} />\n                    </Col>\n                </Row>\n                <Row>\n\n                    {this.state.selectedTeam && this.state.selectedTeam.map(team => {\n\n                        return <Col>\n                            {team.members.map(elm => <UserCard key={elm._id} {...elm} />)}\n                        </Col>\n                    })\n                    }\n                </Row>\n                {/* pintar aqui chart */}\n                <RadarChart\n                    cx={600}\n                    cy={500}\n                    outerRadius={300}\n                    width={1000}\n                    height={800}\n                    data={teamDataReducido}\n                >\n                    <PolarGrid />\n                    <PolarAngleAxis dataKey=\"name\" />\n                    <Radar\n                        name=\"Mike\"\n                        dataKey=\"value\"\n                        stroke=\"#7784d8\"\n                        fill=\"#8884d8\"\n                        fillOpacity={0.6}\n                    />\n                </RadarChart>\n                <Row>\n                    <Col>\n                        <Button className=\"button-style\" onClick={this.num}> Generar código de partida</Button>\n                    </Col>\n                </Row>\n            </Container >\n        )\n    }\n}\n\n\n\n\n\n\n\nexport default Match\n\n\n// const data = [\n//     { subject: 'Math', A: 120, B: 110, fullMark: 150 },\n//     { subject: 'Chinese', A: 98, B: 130, fullMark: 150 },\n//     { subject: 'English', A: 86, B: 130, fullMark: 150 },\n//     { subject: 'Geography', A: 99, B: 100, fullMark: 150 },\n//     { subject: 'Physics', A: 85, B: 90, fullMark: 150 },\n//     { subject: 'History', A: 65, B: 85, fullMark: 150 },\n// ];\n\n// const TwoLevelPieChart = React.createClass({\n//     render() {\n//         return (\n//             <RadarChart cx={300} cy={250} outerRadius={150} width={600} height={500} data={data}>\n//                 <PolarGrid />\n//                 <PolarAngleAxis dataKey=\"subject\" />\n//                 <PolarRadiusAxis angle={30} domain={[0, 150]} />\n//                 <Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n//                 <Radar name=\"Lily\" dataKey=\"B\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.6} />\n//                 <Legend />\n\n//             </RadarChart>\n//         );\n//     }\n// })\n"]},"metadata":{},"sourceType":"module"}